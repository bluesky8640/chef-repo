#
# Cookbook Name:: init_root
# Recipe:: default
#
# Copyright 2014, YOUR_COMPANY_NAME
#
# All rights reserved - Do Not Redistribute
#

require 'chef/shell_out'


## Update apt-get
log "Update apt-get"
apt_update = Mixlib::ShellOut.new("apt-get update", :user => 'root', :cwd => "/root")
apt_update.run_command

if !(apt_update.error!)
        log "Apt update successfully!"
else
        log "Apt update failed!" do
                level :warn
        end
end


## Modify root user
# password = Mixlib::ShellOut.new("mkpasswd -m sha-512 #{node['hadoop_user_password']}")
password = Mixlib::ShellOut.new("openssl passwd -1 #{node['root_password']}")
password.run_command

log "Modify root user"
user "root" do
        password password.stdout.chomp
	action :modify
end

'''
## Setup SSH keys
# Create SSH directory
directory "#{node['system_user_home']}/.ssh" do
      mode "0700"
      owner node['system_user']
      group node['system_user']
      action :create
      recursive true
end

# Generate SSH keys
gen_ssh_keys = Mixlib::ShellOut.new('ssh-keygen -f id_rsa -N "" -t rsa', :cwd => "/tmp")
gen_ssh_keys.run_command

# Share SSH public key
log "Sharing node's public key"
get_pub_key = Mixlib::ShellOut.new('cat', 'id_rsa.pub', :cwd => "/tmp")
get_pub_key.run_command

if !(get_pub_key.error!)
	log "Sharing string OK"
else
	log "Sharing string FAILED" do
		level :warn
	end
end

# Set node public key
node.set["public_key"] = get_pub_key.stdout
log "public_key attribute updated"

# Move SSH keys to system user's workspace
bash "Moving keys to system user's home" do
       user    "root"
       group   "root"
       cwd     "/tmp"
       code    <<-EOF
		mv id_rsa* #{node['system_user_home']}/.ssh
		chown #{node['system_user']}:#{node['system_user']} #{node['system_user_home']}/.ssh/*
       EOF
end
'''
